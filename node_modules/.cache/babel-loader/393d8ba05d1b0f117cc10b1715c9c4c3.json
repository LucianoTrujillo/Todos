{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nfunction todos(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      var todosLength = Object.getOwnPropertyNames(state.entities.todos).length;\n      return _objectSpread({}, state, {\n        entities: _objectSpread({}, state.entities, {\n          todos: _objectSpread({}, state.entities.todos, _defineProperty({}, todosLength, {\n            text: action.payload.todoText,\n            done: false,\n            id: todosLength\n          })),\n          todoType: _objectSpread({}, state.entities.todoType, {\n            0: _objectSpread({}, state.entities.todoType[0], {\n              todos: [].concat(_toConsumableArray(state.entities.todoType[0].todos), [todosLength])\n            })\n          })\n        })\n      });\n\n    case 'REMOVE_TODO':\n      var newTodos = Object.assign({}, state.entities.todos);\n      var newTodoTypes = Object.assign({}, state.entities.todoType);\n      console.log(\"hola\", newTodoTypes[newTodos[action.payload.id].todoType].todos); //newTodoTypes =  newTodoTypes[newTodos[action.payload.id].todoType].todos.filter(id => id != action.payload.id)\n\n      delete newTodos[action.payload.id];\n      return _objectSpread({}, state, {\n        entities: _objectSpread({}, state.entities, {\n          todos: newTodos,\n          todoType: newTodoTypes\n        })\n      });\n\n    case 'CHECK_TODO':\n      return _objectSpread({}, state, {\n        entities: _objectSpread({}, state.entities, {\n          todos: _objectSpread({}, state.entities.todos, _defineProperty({}, action.payload.id, _objectSpread({}, state.entities.todos[action.payload.id], {\n            done: !state.entities.todos[action.payload.id].done\n          })))\n        })\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Reducers\\todos.js"],"names":["todos","state","action","type","todosLength","Object","getOwnPropertyNames","entities","length","text","payload","todoText","done","id","todoType","newTodos","assign","newTodoTypes","console","log"],"mappings":";;;;AAAA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA6B;AAC3B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACA,UAAMC,WAAW,GAAGC,MAAM,CAACC,mBAAP,CAA2BL,KAAK,CAACM,QAAN,CAAeP,KAA1C,EAAiDQ,MAArE;AACE,+BACKP,KADL;AAEEM,QAAAA,QAAQ,oBAAMN,KAAK,CAACM,QAAZ;AACEP,UAAAA,KAAK,oBAAMC,KAAK,CAACM,QAAN,CAAeP,KAArB,sBAA6BI,WAA7B,EAA2C;AAACK,YAAAA,IAAI,EAAEP,MAAM,CAACQ,OAAP,CAAeC,QAAtB;AAAgCC,YAAAA,IAAI,EAAE,KAAtC;AAA6CC,YAAAA,EAAE,EAAET;AAAjD,WAA3C,EADP;AAEEU,UAAAA,QAAQ,oBAAMb,KAAK,CAACM,QAAN,CAAeO,QAArB;AAA+B,iCAAQb,KAAK,CAACM,QAAN,CAAeO,QAAf,CAAwB,CAAxB,CAAR;AAAoCd,cAAAA,KAAK,+BAAMC,KAAK,CAACM,QAAN,CAAeO,QAAf,CAAwB,CAAxB,EAA2Bd,KAAjC,IAAwCI,WAAxC;AAAzC;AAA/B;AAFV;AAFV;;AAOF,SAAK,aAAL;AACE,UAAMW,QAAQ,GAAGV,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBf,KAAK,CAACM,QAAN,CAAeP,KAAjC,CAAjB;AACA,UAAIiB,YAAY,GAAGZ,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBf,KAAK,CAACM,QAAN,CAAeO,QAAjC,CAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,YAAY,CAACF,QAAQ,CAACb,MAAM,CAACQ,OAAP,CAAeG,EAAhB,CAAR,CAA4BC,QAA7B,CAAZ,CAAmDd,KAAvE,EAHF,CAIE;;AACA,aAAOe,QAAQ,CAACb,MAAM,CAACQ,OAAP,CAAeG,EAAhB,CAAf;AAEA,+BACKZ,KADL;AAEEM,QAAAA,QAAQ,oBAAMN,KAAK,CAACM,QAAZ;AACEP,UAAAA,KAAK,EAAEe,QADT;AAEED,UAAAA,QAAQ,EAAEG;AAFZ;AAFV;;AAOF,SAAK,YAAL;AACA,+BACKhB,KADL;AAEEM,QAAAA,QAAQ,oBAAMN,KAAK,CAACM,QAAZ;AACEP,UAAAA,KAAK,oBAAMC,KAAK,CAACM,QAAN,CAAeP,KAArB,sBAA6BE,MAAM,CAACQ,OAAP,CAAeG,EAA5C,oBAAqDZ,KAAK,CAACM,QAAN,CAAeP,KAAf,CAAqBE,MAAM,CAACQ,OAAP,CAAeG,EAApC,CAArD;AAA8FD,YAAAA,IAAI,EAAE,CAACX,KAAK,CAACM,QAAN,CAAeP,KAAf,CAAqBE,MAAM,CAACQ,OAAP,CAAeG,EAApC,EAAwCD;AAA7I;AADP;AAFV;;AAMA;AACE,aAAOX,KAAP;AAhCJ;AAkCD;;AAED,eAAeD,KAAf","sourcesContent":["function todos(state, action){\r\n  switch(action.type){\r\n    case 'ADD_TODO':\r\n    const todosLength = Object.getOwnPropertyNames(state.entities.todos).length;\r\n      return {\r\n        ...state, \r\n        entities: {...state.entities, \r\n                  todos: {...state.entities.todos, [todosLength]: {text: action.payload.todoText, done: false, id: todosLength}},\r\n                  todoType: {...state.entities.todoType, 0: { ...state.entities.todoType[0], todos: [...state.entities.todoType[0].todos, todosLength]}}\r\n        }\r\n      }\r\n    case 'REMOVE_TODO':\r\n      const newTodos = Object.assign({}, state.entities.todos)\r\n      var newTodoTypes = Object.assign({}, state.entities.todoType)\r\n      console.log(\"hola\", newTodoTypes[newTodos[action.payload.id].todoType].todos)\r\n      //newTodoTypes =  newTodoTypes[newTodos[action.payload.id].todoType].todos.filter(id => id != action.payload.id)\r\n      delete newTodos[action.payload.id];\r\n\r\n      return {\r\n        ...state, \r\n        entities: {...state.entities, \r\n                  todos: newTodos,\r\n                  todoType: newTodoTypes,\r\n        }\r\n      }\r\n    case 'CHECK_TODO':\r\n    return {\r\n      ...state, \r\n      entities: {...state.entities, \r\n                todos: {...state.entities.todos, [action.payload.id]: {...state.entities.todos[action.payload.id], done: !state.entities.todos[action.payload.id].done }}\r\n      }\r\n    }\r\n    default:\r\n      return state \r\n  }\r\n}\r\n\r\nexport default todos;"]},"metadata":{},"sourceType":"module"}