{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\src\\\\Screens\\\\Main\\\\Components\\\\TodoList\\\\Container.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport TodoList from './index'; //redux\n\nimport { connect } from 'react-redux';\n\nvar TodoListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoListContainer, _Component);\n\n  function TodoListContainer() {\n    _classCallCheck(this, TodoListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoListContainer).apply(this, arguments));\n  }\n\n  _createClass(TodoListContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"listsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"listContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Easy\"), React.createElement(TodoList, Object.assign({}, this.props.todoTypes[0], {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"listContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(TodoList, Object.assign({}, this.props.todoTypes[1], {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"listContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Hard\"), React.createElement(TodoList, Object.assign({}, this.props.todoTypes[2], {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TodoListContainer;\n}(Component);\n\nfunction mapStateToProps(state, props) {\n  var types = state.todoTypes.map(function (listId) {\n    return state.entities.todoType[listId];\n  });\n  return {\n    todoTypes: types\n  };\n}\n\nexport default connect(mapStateToProps)(TodoListContainer);","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Screens\\Main\\Components\\TodoList\\Container.js"],"names":["React","Component","TodoList","connect","TodoListContainer","props","todoTypes","mapStateToProps","state","types","map","listId","entities","todoType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,SAArB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,iB;;;;;;;;;;;;;6BAEK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEA,oBAAC,QAAD,oBAAc,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA,oBAAC,QAAD,oBAAc,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,CALF,EASE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA,oBAAC,QAAD,oBAAc,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,CATF,CADF;AAgBD;;;;EAnB6BL,S;;AAsBhC,SAASM,eAAT,CAAyBC,KAAzB,EAAgCH,KAAhC,EAAsC;AACpC,MAAMI,KAAK,GAAGD,KAAK,CAACF,SAAN,CAAgBI,GAAhB,CAAoB,UAAAC,MAAM;AAAA,WAAIH,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBF,MAAxB,CAAJ;AAAA,GAA1B,CAAd;AACA,SAAO;AACLL,IAAAA,SAAS,EAAEG;AADN,GAAP;AAGD;;AAED,eAAeN,OAAO,CAACI,eAAD,CAAP,CAAyBH,iBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\nimport TodoList from './index';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\nclass TodoListContainer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"listsContainer\">\r\n        <div className=\"listContainer\">\r\n          <h3>Easy</h3>\r\n        <TodoList {...this.props.todoTypes[0]}/>\r\n        </div>\r\n        <div className=\"listContainer\">\r\n        <h3>Medium</h3>\r\n        <TodoList {...this.props.todoTypes[1]}/>\r\n        </div>\r\n        <div className=\"listContainer\">\r\n        <h3>Hard</h3>\r\n        <TodoList {...this.props.todoTypes[2]}/>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props){\r\n  const types = state.todoTypes.map(listId => state.entities.todoType[listId]);\r\n  return {\r\n    todoTypes: types\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TodoListContainer);"]},"metadata":{},"sourceType":"module"}