{"ast":null,"code":"import { normalize, schema } from 'normalizr';\nexport var normalizeTodos = function normalizeTodos(_ref) {\n  var todos = _ref.todos;\n  var todo = new schema.Entity('todos'); //const todoList = new schema.Entity('todoList', {\n  //  todos: [todo]\n  //})\n  //const flattened = { stages: [ stage ]};\n\n  var normalizedData = normalize(todos, [todo]);\n  return normalizedData;\n};","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Schemas\\index.jsx"],"names":["normalize","schema","normalizeTodos","todos","todo","Entity","normalizedData"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,WAAhC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAEzC,MAAMC,IAAI,GAAG,IAAIH,MAAM,CAACI,MAAX,CAAkB,OAAlB,CAAb,CAFyC,CAIzC;AACA;AACA;AAEA;;AAEA,MAAMC,cAAc,GAAGN,SAAS,CAACG,KAAD,EAAQ,CAAEC,IAAF,CAAR,CAAhC;AAEA,SAAOE,cAAP;AACD,CAbM","sourcesContent":["import {normalize, schema} from 'normalizr';\r\n\r\nexport const normalizeTodos = ({todos}) => {\r\n\r\n  const todo = new schema.Entity('todos');\r\n\r\n  //const todoList = new schema.Entity('todoList', {\r\n  //  todos: [todo]\r\n  //})\r\n  \r\n  //const flattened = { stages: [ stage ]};\r\n  \r\n  const normalizedData = normalize(todos, [ todo ]);\r\n\r\n  return normalizedData;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}