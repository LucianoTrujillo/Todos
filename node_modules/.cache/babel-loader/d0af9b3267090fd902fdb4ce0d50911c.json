{"ast":null,"code":"import { normalize, schema } from 'normalizr';\nexport var normalizeTodos = function normalizeTodos(data) {\n  /* const todo = new schema.Entity('todos', {idAttribute: 'id'});\r\n   const type = new schema.Entity('todoType', {idAttribute: 'id'}, {\r\n     todos: [ todo ]\r\n   }); \r\n  \n   const typeList = {types: [ type ]};\r\n  \n   const result = normalize(data, typeList); */\n  var API = {\n    todos: [{\n      text: \"hola\",\n      id: 1,\n      author: {\n        name: 'kevin',\n        id: 53\n      }\n    }, {\n      text: \"asd\",\n      id: 4,\n      author: {\n        name: 'lue',\n        id: 23\n      }\n    }, {\n      text: \"asffff\",\n      id: 23,\n      author: {\n        name: 'mark',\n        id: 101\n      }\n    }]\n  };\n  var user = new schema.Entity('user');\n  var todo = new schema.Entity('todo', {\n    author: user\n  });\n  var todoList = {\n    todos: [todo]\n  };\n  var result = normalize(API, todoList);\n  return result;\n};","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Schemas\\index.jsx"],"names":["normalize","schema","normalizeTodos","data","API","todos","text","id","author","name","user","Entity","todo","todoList","result"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,WAAhC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAEvC;;;;;;;;AASC,MAAMC,GAAG,GAAG;AACVC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,OADA;AAENF,QAAAA,EAAE,EAAE;AAFE;AAHV,KADK,EASL;AACED,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,EAAE,EAAE,CAFN;AAGEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,KADA;AAENF,QAAAA,EAAE,EAAE;AAFE;AAHV,KATK,EAiBL;AACED,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,EAAE,EAAE,EAFN;AAGEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,MADA;AAENF,QAAAA,EAAE,EAAE;AAFE;AAHV,KAjBK;AADG,GAAZ;AA6BA,MAAMG,IAAI,GAAG,IAAIT,MAAM,CAACU,MAAX,CAAkB,MAAlB,CAAb;AACA,MAAMC,IAAI,GAAG,IAAIX,MAAM,CAACU,MAAX,CAAkB,MAAlB,EAA0B;AAACH,IAAAA,MAAM,EAAEE;AAAT,GAA1B,CAAb;AACA,MAAMG,QAAQ,GAAG;AAACR,IAAAA,KAAK,EAAE,CAAEO,IAAF;AAAR,GAAjB;AAEA,MAAME,MAAM,GAAGd,SAAS,CAACI,GAAD,EAAMS,QAAN,CAAxB;AAGA,SAAOC,MAAP;AACD,CAhDM","sourcesContent":["import {normalize, schema} from 'normalizr';\r\n\r\nexport const normalizeTodos = (data) => {\r\n\r\n /* const todo = new schema.Entity('todos', {idAttribute: 'id'});\r\n  const type = new schema.Entity('todoType', {idAttribute: 'id'}, {\r\n    todos: [ todo ]\r\n  }); \r\n\r\n  const typeList = {types: [ type ]};\r\n\r\n  const result = normalize(data, typeList); */\r\n\r\n  const API = {\r\n    todos: [\r\n      {\r\n        text: \"hola\",\r\n        id: 1,\r\n        author: {\r\n          name: 'kevin',\r\n          id: 53\r\n        }\r\n      },\r\n      {\r\n        text: \"asd\",\r\n        id: 4,\r\n        author: {\r\n          name: 'lue',\r\n          id: 23\r\n        }\r\n      },\r\n      {\r\n        text: \"asffff\",\r\n        id: 23,\r\n        author: {\r\n          name: 'mark',\r\n          id: 101\r\n        }\r\n      },\r\n    ]\r\n  }\r\n\r\n  const user = new schema.Entity('user');\r\n  const todo = new schema.Entity('todo', {author: user});\r\n  const todoList = {todos: [ todo ]}\r\n\r\n  const result = normalize(API, todoList)\r\n\r\n\r\n  return result;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}