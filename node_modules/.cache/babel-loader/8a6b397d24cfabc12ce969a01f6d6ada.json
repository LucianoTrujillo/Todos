{"ast":null,"code":"import { normalize, schema, arrayOf } from 'normalizr';\nvar API = {\n  id: 1,\n  title: \"Blog Title\",\n  content: \"Some really short blog content.  Actually the least interesting post ever\",\n  created_at: \"2016-01-10T23:07:43.248Z\",\n  updated_at: '2016-01-10T23:07:43.248Z',\n  author: {\n    id: 81,\n    name: \"Mr Shelby\"\n  },\n  comments: [{\n    id: 352,\n    content: \"First!\",\n    author: {\n      id: 41,\n      name: \"Foo Bar\"\n    }\n  }]\n};\nexport var normalizeTodos = function normalizeTodos(API) {\n  var todo = new schema.Entity('todos');\n  var todoList = new schema.Entity('todoList', {\n    todos: [todo]\n  }); //const flattened = { stages: [ stage ]};\n\n  var normalizedData = normalize(store, [todoList]); //return normalizedData;\n};","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Schemas\\index.jsx"],"names":["normalize","schema","arrayOf","API","id","title","content","created_at","updated_at","author","name","comments","normalizeTodos","todo","Entity","todoList","todos","normalizedData","store"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,OAA3B,QAAyC,WAAzC;AAEA,IAAMC,GAAG,GAAG;AACVC,EAAAA,EAAE,EAAE,CADM;AAEVC,EAAAA,KAAK,EAAE,YAFG;AAGVC,EAAAA,OAAO,EAAE,2EAHC;AAIVC,EAAAA,UAAU,EAAE,0BAJF;AAKVC,EAAAA,UAAU,EAAE,0BALF;AAMVC,EAAAA,MAAM,EAAE;AACJL,IAAAA,EAAE,EAAE,EADA;AAEJM,IAAAA,IAAI,EAAE;AAFF,GANE;AAUVC,EAAAA,QAAQ,EAAE,CACN;AACIP,IAAAA,EAAE,EAAE,GADR;AAEIE,IAAAA,OAAO,EAAE,QAFb;AAGIG,IAAAA,MAAM,EAAE;AACJL,MAAAA,EAAE,EAAE,EADA;AAEJM,MAAAA,IAAI,EAAE;AAFF;AAHZ,GADM;AAVA,CAAZ;AAsBA,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACT,GAAD,EAAS;AAErC,MAAMU,IAAI,GAAG,IAAIZ,MAAM,CAACa,MAAX,CAAkB,OAAlB,CAAb;AAEA,MAAMC,QAAQ,GAAG,IAAId,MAAM,CAACa,MAAX,CAAkB,UAAlB,EAA8B;AAC7CE,IAAAA,KAAK,EAAE,CAAEH,IAAF;AADsC,GAA9B,CAAjB,CAJqC,CAQrC;;AAEA,MAAMI,cAAc,GAAGjB,SAAS,CAACkB,KAAD,EAAQ,CAAEH,QAAF,CAAR,CAAhC,CAVqC,CAWrC;AACD,CAZM","sourcesContent":["import {normalize, schema, arrayOf} from 'normalizr';\r\n\r\nconst API = {\r\n  id: 1,\r\n  title: \"Blog Title\",\r\n  content: \"Some really short blog content.  Actually the least interesting post ever\",\r\n  created_at: \"2016-01-10T23:07:43.248Z\",\r\n  updated_at: '2016-01-10T23:07:43.248Z',\r\n  author: {\r\n      id: 81,\r\n      name: \"Mr Shelby\"\r\n  },\r\n  comments: [\r\n      {\r\n          id: 352,\r\n          content: \"First!\",\r\n          author: {\r\n              id: 41,\r\n              name: \"Foo Bar\"\r\n          }\r\n      }\r\n  ]\r\n}\r\n\r\nexport const normalizeTodos = (API) => {\r\n\r\n  const todo = new schema.Entity('todos');\r\n\r\n  const todoList = new schema.Entity('todoList', {\r\n    todos: [ todo ]\r\n  })\r\n  \r\n  //const flattened = { stages: [ stage ]};\r\n  \r\n  const normalizedData = normalize(store, [ todoList ] );\r\n  //return normalizedData;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}