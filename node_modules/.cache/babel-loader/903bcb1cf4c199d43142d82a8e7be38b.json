{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nfunction todos(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread({}, state, {\n        entities: _objectSpread({}, state.entities, {\n          todos: _objectSpread({}, state.entities.todos, _defineProperty({}, state.entities.todos.length, {\n            text: action.payload.todoText,\n            done: false,\n            id: state.entities.todos.length\n          })) // todoType: {...state.entities.todoType, 0: { ...state.entities.todoType[0], todos: [...state.entities.todoType[0].todos, 900]}}\n\n          /* ...state,\r\n           entities: {...entities, \r\n              todos: [...state.todos, {\r\n                text: action.payload.todoText,\r\n                done: false,\r\n                id: state.entities.todos.length\r\n              }],\r\n              todoType: {...todoType, 0: {...0, todos: todos.push(state.entities.todos.length)} }\r\n            },*/\n\n        })\n      });\n\n    case 'REMOVE_TODO':\n      return _objectSpread({}, state, {\n        todos: state.todos.filter(function (todo) {\n          return todo.id !== action.payload.id;\n        })\n      });\n\n    case 'CHECK_TODO':\n      return _objectSpread({}, state, {\n        todos: state.todos.map(function (todo) {\n          return todo.id === action.payload.id ? _objectSpread({}, todo, {\n            done: !todo.done\n          }) : _objectSpread({}, todo);\n        })\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default todos;","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Reducers\\todos.js"],"names":["todos","state","action","type","entities","length","text","payload","todoText","done","id","filter","todo","map"],"mappings":";;;AAAA,SAASA,KAAT,CAAeC,KAAf,EAAsBC,MAAtB,EAA6B;AAC3B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,QAAQ,oBAAMH,KAAK,CAACG,QAAZ;AACEJ,UAAAA,KAAK,oBAAMC,KAAK,CAACG,QAAN,CAAeJ,KAArB,sBAA6BC,KAAK,CAACG,QAAN,CAAeJ,KAAf,CAAqBK,MAAlD,EAA2D;AAACC,YAAAA,IAAI,EAAEJ,MAAM,CAACK,OAAP,CAAeC,QAAtB;AAAgCC,YAAAA,IAAI,EAAE,KAAtC;AAA6CC,YAAAA,EAAE,EAAET,KAAK,CAACG,QAAN,CAAeJ,KAAf,CAAqBK;AAAtE,WAA3D,EADP,CAEC;;AAET;;;;;;;;;;AAJQ;AAFV;;AAgBF,SAAK,aAAL;AACE,+BACKJ,KADL;AAEED,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYW,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACF,EAAL,KAAYR,MAAM,CAACK,OAAP,CAAeG,EAA/B;AAAA,SAAvB;AAFT;;AAIF,SAAK,YAAL;AACE,+BACKT,KADL;AAEED,QAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYa,GAAZ,CAAgB,UAAAD,IAAI;AAAA,iBAAIA,IAAI,CAACF,EAAL,KAAYR,MAAM,CAACK,OAAP,CAAeG,EAA3B,qBAAoCE,IAApC;AAA0CH,YAAAA,IAAI,EAAE,CAACG,IAAI,CAACH;AAAtD,iCAAkEG,IAAlE,CAAJ;AAAA,SAApB;AAFT;;AAIF;AACE,aAAOX,KAAP;AA7BJ;AA+BD;;AAED,eAAeD,KAAf","sourcesContent":["function todos(state, action){\r\n  switch(action.type){\r\n    case 'ADD_TODO':\r\n      return {\r\n        ...state, \r\n        entities: {...state.entities, \r\n                  todos: {...state.entities.todos, [state.entities.todos.length]: {text: action.payload.todoText, done: false, id: state.entities.todos.length}},\r\n                 // todoType: {...state.entities.todoType, 0: { ...state.entities.todoType[0], todos: [...state.entities.todoType[0].todos, 900]}}\r\n        }\r\n        /* ...state,\r\n         entities: {...entities, \r\n            todos: [...state.todos, {\r\n              text: action.payload.todoText,\r\n              done: false,\r\n              id: state.entities.todos.length\r\n            }],\r\n            todoType: {...todoType, 0: {...0, todos: todos.push(state.entities.todos.length)} }\r\n          },*/\r\n      }\r\n    case 'REMOVE_TODO':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== action.payload.id)\r\n      }\r\n    case 'CHECK_TODO':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo => todo.id === action.payload.id ? {...todo, done: !todo.done }: {...todo})\r\n      } \r\n    default:\r\n      return state \r\n  }\r\n}\r\n\r\nexport default todos;"]},"metadata":{},"sourceType":"module"}