{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\lulet\\\\Desktop\\\\Platzi\\\\todoapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { normalize, schema } from 'normalizr';\nexport var normalizeTodos = function normalizeTodos(data) {\n  var todo = new schema.Entity('todos', {}, {\n    processStrategy: function processStrategy(value, parent, key) {\n      return _objectSpread({}, value, {\n        todoType: parent.id\n      });\n    }\n  });\n  var type = new schema.Entity('todoType', {\n    todos: [todo]\n  });\n  var typeList = {\n    types: [type]\n  };\n  var result = normalize(data, typeList);\n  return result;\n};","map":{"version":3,"sources":["C:\\Users\\lulet\\Desktop\\Platzi\\todoapp\\src\\Schemas\\index.jsx"],"names":["normalize","schema","normalizeTodos","data","todo","Entity","processStrategy","value","parent","key","todoType","id","type","todos","typeList","types","result"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,WAAhC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAEtC,MAAMC,IAAI,GAAG,IAAIH,MAAM,CAACI,MAAX,CAAkB,OAAlB,EAA2B,EAA3B,EAA+B;AAACC,IAAAA,eAAe,EAAE,yBAACC,KAAD,EAAQC,MAAR,EAAgBC,GAAhB;AAAA,+BAA8BF,KAA9B;AAAqCG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAAtD;AAAA;AAAlB,GAA/B,CAAb;AACA,MAAMC,IAAI,GAAG,IAAIX,MAAM,CAACI,MAAX,CAAkB,UAAlB,EAA6B;AACxCQ,IAAAA,KAAK,EAAE,CAAET,IAAF;AADiC,GAA7B,CAAb;AAIA,MAAMU,QAAQ,GAAG;AAACC,IAAAA,KAAK,EAAE,CAAEH,IAAF;AAAR,GAAjB;AAEA,MAAMI,MAAM,GAAGhB,SAAS,CAACG,IAAD,EAAOW,QAAP,CAAxB;AAEA,SAAOE,MAAP;AACD,CAZM","sourcesContent":["import {normalize, schema} from 'normalizr';\r\n\r\nexport const normalizeTodos = (data) => {\r\n\r\n  const todo = new schema.Entity('todos', {}, {processStrategy: (value, parent, key)  => ({...value, todoType: parent.id})});\r\n  const type = new schema.Entity('todoType',{\r\n    todos: [ todo ]\r\n  }); \r\n\r\n  const typeList = {types: [ type ]};\r\n\r\n  const result = normalize(data, typeList); \r\n\r\n  return result;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}